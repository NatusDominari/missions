/*%FSM<COMPILE "D:\Steam\SteamApps\common\Arma 3 Tools\FSMEditor\scriptedFSM.cfg, QRF">*/
/*%FSM<HEAD>*/
/*
item0[] = {"setup",0,250,-723.512756,-697.723389,-633.512817,-647.723389,0.000000,"setup"};
item1[] = {"enemy_detected_",4,218,-739.412292,-593.224609,-618.213379,-535.424866,0.000000,"enemy detected?"};
item2[] = {"estimate_enemy_strength",2,250,-754.544739,-472.696747,-604.880981,-413.226288,0.000000,"estimate enemy strength " \n "QRF stregth"};
item3[] = {"can_envelop_",4,218,-949.067383,-336.941711,-859.067444,-286.941711,0.000000,"can envelop?"};
item4[] = {"envelop_the_enem",2,250,-959.437378,-233.817505,-846.162537,-182.759583,0.000000,"envelop the enemy"};
item5[] = {"enemy_not_detectd",4,218,-779.505920,-97.444748,-625.211853,-33.577393,0.000000,"enemy not detectd - rtb?"};
item6[] = {"end",1,4346,-755.237488,73.744537,-665.237427,123.744522,0.000000,"end"};
item7[] = {"can_flank_",4,218,-744.254395,-339.833588,-654.254395,-289.833588,0.000000,"can flank?"};
item8[] = {"flank_the_enemy",2,250,-744.605347,-230.017242,-654.605347,-180.017242,0.000000,"flank the enemy"};
item9[] = {"can_screen_",4,218,-595.575745,-338.715698,-505.575745,-288.715698,0.000000,"can screen?"};
item10[] = {"screen_the_enemy",2,250,-598.162476,-249.021240,-479.097412,-200.139160,0.000000,"screen the enemy"};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {2,7};
link4[] = {2,9};
link5[] = {3,4};
link6[] = {4,5};
link7[] = {5,6};
link8[] = {7,8};
link9[] = {8,5};
link10[] = {9,10};
link11[] = {10,5};
globals[] = {0.000000,0,0,0,0,640,480,1,13,6316128,1,-1068.207520,-294.114136,502.173889,-467.087524,706,884,1};
window[] = {2,-1,-1,-32000,-32000,822,35,1166,31,3,724};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "QRF";
        class States
        {
                /*%FSM<STATE "setup">*/
                class setup
                {
                        name = "setup";
                        itemno = 0;
                        init = /*%FSM<STATEINIT""">*/"params [""_groups"",""_side_enemy"",""_hq_pos"",[""_reaction_radius"",1000]];" \n
                         "_side = side leader (_groups select 0);" \n
                         "" \n
                         "t800_qrf_detected = false;" \n
                         "t800_qrf_rtb = false;" \n
                         "t800_qrf_detected_enemy = [];" \n
                         "" \n
                         "_trigger = createTrigger [""EmptyDetector"",_hq_pos];" \n
                         "_trigger setTriggerArea [_reaction_radius,_reaction_radius,0,false];" \n
                         "_trigger setTriggerActivation [_side_enemy,format [""%1 D"",_side],true];" \n
                         "_trigger setTriggerStatements [" \n
                         "	""this""," \n
                         "	""t800_qrf_detected = true; t800_qrf_detected_enemy = thisList;""," \n
                         "	""t800_qrf_detected = false; t800_qrf_rtb = true;""" \n
                         "];" \n
                         "" \n
                         "_find_nearest_enemy = {" \n
                         "	private _enemy_front = t800_qrf_detected_enemy select 0;" \n
                         "" \n
                         "	{" \n
                         "		if ((_x distance _hq_pos) < (_enemy_front distance _hq_pos)) then {" \n
                         "			_enemy_front = _x;" \n
                         "		};" \n
                         "	} forEach t800_qrf_detected_enemy;" \n
                         "" \n
                         "	_enemy_front" \n
                         "};" \n
                         "" \n
                         "_find_left_flank = {" \n
                         "	private _pos = [getPos _this, 300, 200, 0, _this modelToWorld [-300,0,0]] call BIS_fnc_findOverwatch;" \n
                         "	_pos" \n
                         "};" \n
                         "" \n
                         "_find_right_flank = {" \n
                         "	private _pos = [getPos _this, 300, 200, 0, _this modelToWorld [300,0,0]] call BIS_fnc_findOverwatch;" \n
                         "	_pos" \n
                         "};" \n
                         "" \n
                         "_find_front = {" \n
                         "	scriptName ""_find_front"";" \n
                         "" \n
                         "	_pos = (getPos _this) vectorAdd (((getPos _this) vectorFromTo _hq_pos) vectorMultiply 200);" \n
                         "	_pos" \n
                         "};" \n
                         "" \n
                         "_find_rear = {" \n
                         "	_pos = (getPos _this) vectorAdd ((_hq_pos vectorFromTo (getPos _this)) vectorMultiply 200);" \n
                         "	_pos = [getPos _this, 300, 200, 0, _pos] call BIS_fnc_findOverwatch;" \n
                         "	_pos" \n
                         "};" \n
                         "" \n
                         "_get_nearest_pos = {" \n
                         "	params [""_origin"",""_dest1"",""_dest2""];" \n
                         "	" \n
                         "	if ((_origin distance _dest1) > (_origin distance _dest2)) then {" \n
                         "		_dest2" \n
                         "	} else {" \n
                         "		_dest1" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "_move_to = {" \n
                         "	scriptName ""_move_to"";" \n
                         "	params [""_group"",""_pos""];" \n
                         "" \n
                         "	private _wp1 = _group addWaypoint [_pos,0];" \n
                         "	" \n
                         "	if (assignedVehicle leader _group != objNull) then {" \n
                         "		_wp1 setWaypointSpeed ""NORMAL"";" \n
                         "		_wp1 setWaypointBehaviour ""SAFE"";" \n
                         "	} else {" \n
                         "		_wp1 setWaypointSpeed ""NORMAL"";" \n
                         "		_wp1 setWaypointBehaviour ""AWARE"";" \n
                         "	};" \n
                         "	" \n
                         "	private _wp2 = _group addWaypoint [_pos,0];" \n
                         "	_wp2 setWaypointSpeed ""FULL"";" \n
                         "	_wp2 setWaypointBehaviour ""COMBAT"";" \n
                         "};" \n
                         "" \n
                         "_flank_enemy = {" \n
                         "	params [""_group"", ""_enemy""];" \n
                         "	private _flank_pos = [getPos (leader _group), _enemy call _find_left_flank,  _enemy call _find_right_flank] call _get_nearest_pos;" \n
                         "	private _wp1 = _group addWaypoint [_flank_pos,0];" \n
                         "	_wp1 setWaypointSpeed ""NORMAL"";" \n
                         "	_wp1 setWaypointBehaviour ""SAFE"";" \n
                         "	" \n
                         "	private _wp2 = _group addWaypoint [getPos _enemy,0];" \n
                         "	_wp2 setWaypointSpeed ""FULL"";" \n
                         "	_wp2 setWaypointBehaviour ""COMBAT"";	" \n
                         "	_wp2 setWaypointType ""SAD"";" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "enemy_detected_">*/
                                class enemy_detected_
                                {
                                        itemno = 1;
                                        priority = 0.000000;
                                        to="estimate_enemy_strength";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"t800_qrf_detected"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "estimate_enemy_strength">*/
                class estimate_enemy_strength
                {
                        name = "estimate_enemy_strength";
                        itemno = 2;
                        init = /*%FSM<STATEINIT""">*/"_count_friendly = 0;" \n
                         "" \n
                         "{" \n
                         "	_count_friendly = _count_friendly + (count units _x);" \n
                         "} forEach _groups;" \n
                         "" \n
                         "_count_enemy = count t800_qrf_detected_enemy;" \n
                         "" \n
                         "_could_envelop = _count_friendly >= (_count_enemy * 3) && (count _groups > 2);" \n
                         "_could_flank = _count_friendly >= (_count_enemy * 2) && (count _groups > 1) && !_could_envelop;" \n
                         "_could_screen = _count_friendly >= _count_enemy && !_could_envelop && !_could_flank;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "can_flank_">*/
                                class can_flank_
                                {
                                        itemno = 7;
                                        priority = 0.000000;
                                        to="flank_the_enemy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_could_flank"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "can_screen_">*/
                                class can_screen_
                                {
                                        itemno = 9;
                                        priority = 0.000000;
                                        to="screen_the_enemy";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_could_screen"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "can_envelop_">*/
                                class can_envelop_
                                {
                                        itemno = 3;
                                        priority = 0.000000;
                                        to="envelop_the_enem";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_could_envelop"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "envelop_the_enem">*/
                class envelop_the_enem
                {
                        name = "envelop_the_enem";
                        itemno = 4;
                        init = /*%FSM<STATEINIT""">*/"scriptName ""envelop the enemy, qrf.fsm"";" \n
                         "" \n
                         "_blocking_force = ceil (count _groups / 3);" \n
                         "_flanking_force = floor ((count _groups - _blocking_force) / 2);" \n
                         "_enveloping_force = count _groups - _blocking_force - _flanking_force;" \n
                         "" \n
                         "_enemy_front_soldier = [] call _find_nearest_enemy;" \n
                         "" \n
                         "private _marker_rear = createMarker [""EnemyRear"",_enemy_front_soldier call _find_rear];" \n
                         "_marker_rear setMarkerShape ""ICON"";" \n
                         "_marker_rear setMarkerType ""hd_dot"";" \n
                         "_marker_rear setMarkerText ""Enemy rear"";" \n
                         "" \n
                         "private _marker_front = createMarker [""EnemyFront"",_enemy_front_soldier call _find_front];" \n
                         "_marker_front setMarkerShape ""ICON"";" \n
                         "_marker_front setMarkerType ""hd_dot"";" \n
                         "_marker_front setMarkerText ""Enemy front"";" \n
                         "" \n
                         "private _marker_left_flank = createMarker [""LeftFlank"",_enemy_front_soldier call _find_left_flank];" \n
                         "_marker_left_flank setMarkerShape ""ICON"";" \n
                         "_marker_left_flank setMarkerType ""hd_dot"";" \n
                         "_marker_left_flank setMarkerText ""Enemy left flank"";" \n
                         "" \n
                         "private _marker_right_flank = createMarker [""RightFlank"",_enemy_front_soldier call _find_right_flank];" \n
                         "_marker_right_flank setMarkerShape ""ICON"";" \n
                         "_marker_right_flank setMarkerType ""hd_dot"";" \n
                         "_marker_right_flank setMarkerText ""Enemy right flank"";" \n
                         "" \n
                         "for [{_i = 0}, {_i < count _groups}, {_i = _i + 1}] do {" \n
                         "	if (_i >= (_blocking_force + _flanking_force)) then {" \n
                         "		[_groups select _i, _enemy_front_soldier call _find_rear] call _move_to;" \n
                         "	} else {" \n
                         "		if (_i >= _blocking_force) then {" \n
                         "			[_groups select _i, _enemy_front_soldier] call _flank_enemy;" \n
                         "		} else {" \n
                         "			[_groups select _i, _enemy_front_soldier call _find_front] call _move_to;" \n
                         "		};" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "systemChat ""Enveloping the enemy..."";"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "enemy_not_detectd">*/
                                class enemy_not_detectd
                                {
                                        itemno = 5;
                                        priority = 0.000000;
                                        to="end";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"t800_qrf_rtb"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "end">*/
                class end
                {
                        name = "end";
                        itemno = 6;
                        init = /*%FSM<STATEINIT""">*/"t800_qrf_detected = nil;" \n
                         "t800_qrf_detected_enemy = nil;" \n
                         "t800_qrf_rtb = nil;" \n
                         "deleteVehicle _trigger;" \n
                         "" \n
                         "{" \n
                         "	private _wp = _x addWaypoint [_hq_pos, 150];" \n
                         "	_wp setWaypointType ""MOVE"";" \n
                         "	_wp setWaypointBehaviour ""AWARE"";" \n
                         "	_wp setWaypointSpeed ""LIMITED"";" \n
                         "} forEach _groups;" \n
                         "" \n
                         "systemChat ""Quick reaction force RTB..."";" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "flank_the_enemy">*/
                class flank_the_enemy
                {
                        name = "flank_the_enemy";
                        itemno = 8;
                        init = /*%FSM<STATEINIT""">*/"scriptName ""fix the enemy, qrf.fsm"";" \n
                         "" \n
                         "_blocking_force = ceil (count _groups / 2);" \n
                         "_flanking_force = count _groups - _blocking_force;" \n
                         "" \n
                         "_enemy_front = [] call _find_nearest_enemy;" \n
                         "" \n
                         "for [{_i = 0}, {_i < count _groups}, {_i = _i + 1}] do {" \n
                         "	if (_i >= _blocking_force) then {" \n
                         "		[_groups select _i, _enemy_front] call _flank_enemy;" \n
                         "	} else {" \n
                         "		[_groups select _i, _enemy_front call _find_front] call _move_to;" \n
                         "	};" \n
                         "};" \n
                         "" \n
                         "systemChat ""Flanking the enemy..."";"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "enemy_not_detectd">*/
                                class enemy_not_detectd
                                {
                                        itemno = 5;
                                        priority = 0.000000;
                                        to="end";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"t800_qrf_rtb"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "screen_the_enemy">*/
                class screen_the_enemy
                {
                        name = "screen_the_enemy";
                        itemno = 10;
                        init = /*%FSM<STATEINIT""">*/"scriptName ""screen the enemy, qrf.fsm"";" \n
                         "" \n
                         "_enemy_front = [] call _find_nearest_enemy;" \n
                         "" \n
                         "for [{_i = 0}, {_i < count _groups}, {_i = _i + 1}] do {" \n
                         "	[_groups select _i, _enemy_front call _find_front] call _move_to;" \n
                         "};" \n
                         "" \n
                         "systemChat ""Screening the enemy..."";"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "enemy_not_detectd">*/
                                class enemy_not_detectd
                                {
                                        itemno = 5;
                                        priority = 0.000000;
                                        to="end";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"t800_qrf_rtb"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="setup";
        finalStates[] =
        {
                "end",
        };
};
/*%FSM</COMPILE>*/